!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
BLACK	common/color.h	12;"	d
BLUE	common/color.h	20;"	d
Ctrl	common/datetype.h	/^struct Ctrl {$/;"	s
DEFARG	common/game.h	9;"	d
FT_ACK	common/datetype.h	59;"	d
FT_FIN	common/datetype.h	60;"	d
FT_MSG	common/datetype.h	58;"	d
FT_TEST	common/datetype.h	56;"	d
FT_WALL	common/datetype.h	57;"	d
FootBallMsg	common/datetype.h	/^struct FootBallMsg {$/;"	s
Football	common/game.h	/^WINDOW *Football, *Message, *Help, *Score, *Write;$/;"	v
GREEN	common/color.h	16;"	d
HEAD_H	common/head.h	8;"	d
Help	common/game.h	/^WINDOW *Football, *Message, *Help, *Score, *Write;$/;"	v
L_BLACK	common/color.h	13;"	d
L_BLUE	common/color.h	21;"	d
L_GREEN	common/color.h	17;"	d
L_PINK	common/color.h	22;"	d
L_RED	common/color.h	15;"	d
L_YELLOW	common/color.h	19;"	d
LogRequest	common/datetype.h	/^struct LogRequest { \/\/登录信息,存放用户发送的$/;"	s
LogResponse	common/datetype.h	/^struct LogResponse {$/;"	s
MAX	common/game.h	12;"	d
MAX	common/heart_beat.c	12;"	d	file:
MAX	common/server_exit.c	9;"	d	file:
MAX	common/sub.reactor.c	11;"	d	file:
MAX	common/udp_epoll.c	13;"	d	file:
MAXMSG	common/datetype.h	10;"	d
MAXTASK	common/thread_pool.h	11;"	d
MAXTASK	server/1.线程池.c	12;"	d	file:
MAXTHREAD	common/thread_pool.h	12;"	d
MAXTHREAD	server/1.线程池.c	13;"	d	file:
MAX_CLIENT	common/chatroom.h	43;"	d
Map	common/datetype.h	/^struct Map {$/;"	s
Message	common/game.h	/^WINDOW *Football, *Message, *Help, *Score, *Write;$/;"	v
Msg	common/chatroom.h	/^struct Msg {$/;"	s
NONE	common/color.h	11;"	d
PINK	common/color.h	23;"	d
Point	common/datetype.h	/^struct Point {$/;"	s
RED	common/color.h	14;"	d
RecvMsg	common/chatroom.h	/^struct RecvMsg {$/;"	s
Score	common/game.h	/^WINDOW *Football, *Message, *Help, *Score, *Write;$/;"	v
Show_Message	common/game.h	10;"	d
TaskQueue	server/1.线程池.c	/^}TaskQueue;\/\/任务队列$/;"	t	typeref:struct:__anon1	file:
TaskQueueInit	server/1.线程池.c	/^void TaskQueueInit(TaskQueue *queue, int sum) {$/;"	f
TaskQueuePop	server/1.线程池.c	/^int TaskQueuePop(TaskQueue *queue) {$/;"	f
TaskQueuePush	server/1.线程池.c	/^void TaskQueuePush(TaskQueue *queue, int fd) {$/;"	f
TransMsg	common/datetype.h	/^struct TransMsg {\/\/客户端只负责控制，服务端负责计算$/;"	s
User	common/datetype.h	/^struct User {$/;"	s
Write	common/game.h	/^WINDOW *Football, *Message, *Help, *Score, *Write;$/;"	v
YELLOW	common/color.h	18;"	d
_CHATROOM_H	common/chatroom.h	8;"	d
_CLIENT_RECVER_H	common/client_recver.h	9;"	d
_COLOR_H	common/color.h	9;"	d
_COMMON_H	common/common.h	9;"	d
_DATE_H	common/datetype.h	9;"	d
_GAME_H	common/game.h	8;"	d
_GLOBAL_H	common/global.h	9;"	d
_HEART_BEAT_H	common/heart_beat.h	9;"	d
_SERVER_EXIT_H	common/server_exit.h	9;"	d
_SUB_REACTOR_H	common/sub.reactor.h	9;"	d
_TCP_CLIENT_H	common/tcp_client.h	9;"	d
_TCP_CLIENT_H	common/udp_client.h	9;"	d
_TCP_SERVER_H	common/tcp_server.h	9;"	d
_TCP_SERVER_H	common/udp_server.h	9;"	d
_THREAD_POOL_H	common/thread_pool.h	9;"	d
_UDP_EPOLL_H	common/udp_epoll.h	9;"	d
add_event	common/udp_epoll.c	/^void add_event(int epollfd, int fd, int events){$/;"	f
add_event_ptr	common/udp_epoll.c	/^void add_event_ptr(int epollfd, int fd, int events, struct User *user) {$/;"	f
add_to_sub_reactor	common/udp_epoll.c	/^void add_to_sub_reactor(struct User *user) {$/;"	f
bepollfd	server/server.c	/^int repollfd, bepollfd;$/;"	v
bteam	server/server.c	/^struct User *bteam;$/;"	v	typeref:struct:User
bteam	server/su_server.c	/^struct User *bteam;$/;"	v	typeref:struct:User
carry	common/datetype.h	/^    int carry;\/\/带球$/;"	m	struct:Ctrl
ch_char	server/1.线程池.c	/^char ch_char(char c) {$/;"	f
chat_recv	common/chatroom.h	/^struct RecvMsg chat_recv(int fd) {$/;"	f
chat_send	common/chatroom.h	/^int chat_send(struct Msg msg, int fd) {$/;"	f
check_online	common/udp_epoll.c	/^int check_online(struct LogRequest *request) {$/;"	f
client_recv	common/client_recver.c	/^void *client_recv(void *arg) {$/;"	f
cond	common/thread_pool.h	/^    pthread_cond_t cond;$/;"	m	struct:task_queue
cond	server/1.线程池.c	/^    pthread_cond_t cond;\/\/条件变量$/;"	m	struct:__anon1	file:
conf	client/client.c	/^char *conf = ".\/football.conf";$/;"	v
conf	server/server.c	/^char *conf = ".\/server.conf";$/;"	v
conf	server/su_server.c	/^char *conf = ".\/server.conf";$/;"	v
conf_ans	common/global.c	/^char conf_ans[50];$/;"	v
court	common/game.h	/^struct Map court;$/;"	v	typeref:struct:Map
court	server/server.c	/^struct Map court;$/;"	v	typeref:struct:Map
create_newwin	common/game.c	/^WINDOW *create_newwin(int width, int height, int start_x, int start_y) {\/\/创建窗口$/;"	f
ctrl	common/datetype.h	/^    struct Ctrl ctrl;$/;"	m	struct:TransMsg	typeref:struct:TransMsg::Ctrl
data_port	server/server.c	/^int data_port;$/;"	v
data_port	server/su_server.c	/^int data_port;$/;"	v
del_event	common/udp_epoll.c	/^void del_event(int epollfd, int fd){$/;"	f
destory_win	common/game.c	/^void destory_win(WINDOW *win) {\/\/销毁窗口$/;"	f
dirx	common/datetype.h	/^    int dirx;\/\/方向$/;"	m	struct:TransMsg
diry	common/datetype.h	/^    int diry;$/;"	m	struct:TransMsg
do_echo	common/thread_pool.c	/^void do_echo(struct User *user) {$/;"	f
do_echo	server/1.线程池.c	/^void do_echo(int fd) {$/;"	f
draw	common/game.c	/^void *draw(void *arg) {$/;"	f
epollfd	common/thread_pool.h	/^    int epollfd;\/\/用来判断从反应堆是谁$/;"	m	struct:task_queue
fd	common/datetype.h	/^    int fd;$/;"	m	struct:User
fd	server/1.线程池.c	/^    int *fd;\/\/存储打开文件，已有连接$/;"	m	struct:__anon1	file:
find_sub	common/udp_epoll.c	/^int find_sub(struct User *team) {$/;"	f
flag	common/chatroom.h	/^    int flag;$/;"	m	struct:Msg
flag	common/datetype.h	/^    int flag;\/\/未响应次数，用来判定是否在线,当有客户端3次没有响应时就认为没在线$/;"	m	struct:User
from	common/chatroom.h	/^    char from[20];$/;"	m	struct:Msg
gate_height	common/datetype.h	/^    int gate_height;$/;"	m	struct:Map
gate_width	common/datetype.h	/^    int gate_width;\/\/球门$/;"	m	struct:Map
get_value	common/common.c	/^char *get_value(char *path, char *key) {$/;"	f
gotoxy	common/game.c	/^void gotoxy(int x, int y) {$/;"	f
gotoxy_puc	common/game.c	/^void gotoxy_puc(int x, int y, int c) {$/;"	f
gotoxy_puts	common/game.c	/^void gotoxy_puts(int x, int y, char *s) {$/;"	f
head	common/thread_pool.h	/^    int head;$/;"	m	struct:task_queue
head	server/1.线程池.c	/^    int head;$/;"	m	struct:__anon1	file:
heart_beat	common/heart_beat.c	/^void *heart_beat(void *arg) {$/;"	f
heart_beat_team	common/heart_beat.c	/^void heart_beat_team(struct User *team) {$/;"	f
height	common/datetype.h	/^    int height;$/;"	m	struct:Map
init_football	common/game.c	/^void init_football() {$/;"	f
kick	common/datetype.h	/^    int kick;\/\/踢球$/;"	m	struct:Ctrl
loc	common/datetype.h	/^    struct Point loc;$/;"	m	struct:User	typeref:struct:User::Point
logout	client/client.c	/^void logout(int signum) {$/;"	f
main	client/client.c	/^int main(int argc, char **argv){$/;"	f
main	server/1.线程池.c	/^int main(int argc, char **argv) {$/;"	f
main	server/server.c	/^int main(int argc, char **argv){$/;"	f
main	server/su_server.c	/^int main(int argc, char **argv) {$/;"	f
main	udp/client.c	/^ int main(int argc, char **argv) {$/;"	f
main	udp/server.c	/^int main(int argc, char **argv) {$/;"	f
make_block	common/common.c	/^void make_block(int fd) {$/;"	f
make_block_ioctl	common/common.c	/^void make_block_ioctl(int fd) {$/;"	f
make_nonblock	common/common.c	/^void make_nonblock(int fd) {$/;"	f
make_nonblock_ioctl	common/common.c	/^void make_nonblock_ioctl(int fd){$/;"	f
message	common/chatroom.h	/^    char message[512];$/;"	m	struct:Msg
message_num	common/game.c	/^int message_num = 0;$/;"	v
msg	common/chatroom.h	/^    struct Msg msg;$/;"	m	struct:RecvMsg	typeref:struct:RecvMsg::Msg
msg	common/datetype.h	/^    char msg[512];$/;"	m	struct:LogRequest
msg	common/datetype.h	/^    char msg[512];\/\/拒绝原因$/;"	m	struct:LogResponse
msg	common/datetype.h	/^    char msg[MAXMSG];$/;"	m	struct:FootBallMsg
mutex	common/thread_pool.h	/^    pthread_mutex_t mutex;$/;"	m	struct:task_queue
mutex	server/1.线程池.c	/^    pthread_mutex_t mutex;\/\/互斥锁$/;"	m	struct:__anon1	file:
name	common/datetype.h	/^    char name[20];$/;"	m	struct:FootBallMsg
name	common/datetype.h	/^    char name[20];$/;"	m	struct:LogRequest
name	common/datetype.h	/^    char name[20];\/\/客户端名字$/;"	m	struct:User
online	common/datetype.h	/^    int online;$/;"	m	struct:User
port	server/server.c	/^int port = 0;$/;"	v
port	server/su_server.c	/^int port = 0;$/;"	v
repollfd	server/server.c	/^int repollfd, bepollfd;$/;"	v
retval	common/chatroom.h	/^    int retval;$/;"	m	struct:RecvMsg
rteam	server/server.c	/^struct User *rteam;\/\/存放两个队的用户端$/;"	v	typeref:struct:User
rteam	server/su_server.c	/^struct User *rteam;$/;"	v	typeref:struct:User
server_exit	common/server_exit.c	/^void server_exit(int signum) {$/;"	f
server_ip	client/client.c	/^char server_ip[20] = {0};$/;"	v
server_port	client/client.c	/^int server_port = 0;$/;"	v
show_message	common/game.c	/^void show_message(WINDOW *win, struct User *user, char *msg, int type) {$/;"	f
size	common/datetype.h	/^    int size;$/;"	m	struct:FootBallMsg
socket_connect	common/tcp_client.c	/^int socket_connect(char *host, int port) {$/;"	f
socket_connect_timeout	common/tcp_client.c	/^int socket_connect_timeout(char *host, int port, long timeout) {$/;"	f
socket_create	common/tcp_server.c	/^int socket_create(int port) {$/;"	f
socket_create_udp	common/udp_server.c	/^int socket_create_udp(int port) {$/;"	f
socket_udp	common/udp_client.c	/^int socket_udp() {$/;"	f
sockfd	client/client.c	/^int sockfd;$/;"	v
start	common/datetype.h	/^    struct Point start;\/\/区域大小$/;"	m	struct:Map	typeref:struct:Map::Point
sub_reactor	common/sub.reactor.c	/^void *sub_reactor(void *arg) {$/;"	f
sum	common/thread_pool.h	/^    int sum;$/;"	m	struct:task_queue
sum	server/1.线程池.c	/^    int sum;$/;"	m	struct:__anon1	file:
tail	common/thread_pool.h	/^    int tail;$/;"	m	struct:task_queue
tail	server/1.线程池.c	/^    int tail;$/;"	m	struct:__anon1	file:
task_queue	common/thread_pool.h	/^struct task_queue {$/;"	s
task_queue_init	common/thread_pool.c	/^void task_queue_init(struct task_queue *taskQueue, int sum, int epollfd) {$/;"	f
task_queue_pop	common/thread_pool.c	/^struct User *task_queue_pop(struct task_queue *taskQueue) {$/;"	f
task_queue_push	common/thread_pool.c	/^void task_queue_push(struct task_queue *taskQueue, struct User *user) {$/;"	f
team	common/datetype.h	/^    int team;  \/\/ 0 RED 1 BLUE$/;"	m	struct:LogRequest
team	common/datetype.h	/^    int team;$/;"	m	struct:FootBallMsg
team	common/datetype.h	/^    int team;\/\/队伍$/;"	m	struct:User
team	common/thread_pool.h	/^    struct User **team;\/\/指针的指针$/;"	m	struct:task_queue	typeref:struct:task_queue::User
thread_run	common/thread_pool.c	/^void *thread_run(void *arg) {$/;"	f
thread_run	server/1.线程池.c	/^void *thread_run(void *arg) {$/;"	f
type	common/datetype.h	/^    int type;$/;"	m	struct:FootBallMsg
type	common/datetype.h	/^    int type;\/\/成功与否 0 success 1 failed$/;"	m	struct:LogResponse
udp_accept	common/udp_epoll.c	/^int udp_accept(int epollfd, int fd, struct User *user){$/;"	f
udp_connect	common/udp_epoll.c	/^int udp_connect(int epollfd, struct sockaddr_in *serveraddr){$/;"	f
w_gotoxy_putc	common/game.c	/^void w_gotoxy_putc(WINDOW *win, int x, int y, int c) {\/\/每个窗口有自己的xy,$/;"	f
w_gotoxy_puts	common/game.c	/^void w_gotoxy_puts(WINDOW *win, int x, int y, char *s) {$/;"	f
width	common/datetype.h	/^    int width;$/;"	m	struct:Map
x	common/datetype.h	/^    int x, y;$/;"	m	struct:Point
y	common/datetype.h	/^    int x, y;$/;"	m	struct:Point
